<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[molon's dev]]></title>
  <link href="http://molon.github.io/atom.xml" rel="self"/>
  <link href="http://molon.github.io/"/>
  <updated>2013-12-25T03:03:32+08:00</updated>
  <id>http://molon.github.io/</id>
  <author>
    <name><![CDATA[molon]]></name>
    <email><![CDATA[dudl@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress安装和使用]]></title>
    <link href="http://molon.github.io/2013/12/octopressan-zhuang-he-shi-yong/"/>
    <updated>2013-12-24T16:28:41+08:00</updated>
    <id>http://molon.github.io/2013/12/octopressan-zhuang-he-shi-yong</id>
    <content type="html"><![CDATA[<h2>前提</h2>

<p>本文是以Mac安装为前提的，其他系统请自行选取合适自己的尝试。</p>

<h2>安装组件</h2>

<h3>安装rvm</h3>

<p>注意安装RVM应该是需要MacPort，而MacPort一般需要XCode的CommandLineTools组件，所以需要自行解决这两个东西先。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sed -i .bak 's!ftp.ruby-lang.org/pub/ruby!ruby.taobao.org/mirrors/ruby!' $rvm_path/config/db
</span><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第一个是修改rvm的下载源，否则国内访问这些资源超级慢的。</li>
<li>第二个是下载安装rvm，然后会自动下载安装ruby最新版，然后会自动下载安装rubygems最新版(根据命令行返回结果显示，如果这些都做了的话，下一步可以省略。)</li>
</ul>


<h3>安装ruby和rubygems</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install 1.9.3 #只是最少1.9.3，以上版本亦可
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>rvm rubygems latest
</span><span class='line'>ruby --version</span></code></pre></td></tr></table></div></figure>


<p>如果以后遇到了一些问题，首先就要确认是不是<code>ruby</code>和<code>rake</code>(在下面<strong>生成和预览</strong>下有提到)的版本问题。<code>ruby --version</code>用来检查版本最低是1.9.3，如果不是则使用<code>rvm use 1.9.3</code>切换当前有效ruby，不建议卸载系统自带的版本，可能会引起其他诸多问题。</p>

<h3>配置rubygems</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem sources -r https://rubygems.org/
</span><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -l</span></code></pre></td></tr></table></div></figure>


<p><code>gem sources -l</code>用来确认gem的资源URL是否只有<a href="http://ruby.taobao.org">http://ruby.taobao.org</a>，也是一个国内的资源镜像。</p>

<h2>安装Octopress</h2>

<h3>从Git获取源码</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress</span></code></pre></td></tr></table></div></figure>


<h3>安装Bundler</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<h3>安装Octopress默认主题</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h3>生成和预览</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>预览时在命令行Ctrl+C退出预览。 <br/>
<strong>第一次应该不会，但是以后如果遇到了显示rake版本不对的问题。可能是因为有两个rake版本存在，可以使用<code>gem unstall rake</code>，然后选择一个不需要的版本卸载即可</strong></p>

<h2>简单使用</h2>

<h3>安装其他主题</h3>

<p>把主题文件夹下载下来，放在根目录，例如名字是叫XXX</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp -R XXX .themes/XXX
</span><span class='line'>rake "install[XXX]" #以前有主题则需要输入y/n来确认
</span><span class='line'>rake generate
</span><span class='line'>rake preview #开启预览</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第一行命令是把源码复制到.themes隐藏文件夹里。</li>
<li>其实只要开一个命令行<code>rake preview</code>，不停止。然后再开一个命令行做添加文章，修改样式还有界面，修改主题等等rake方面的操作是可以的。可以认为<code>rake preview</code>是打开了一个Web服务器，并且其可以监视一些文件改动并做处理。</li>
<li>至于安装主题模板其实就是把.themes里的一些东西赋值到根目录的sass和source文件夹里。一般主题安装完还是需要自定义修改一些东西(在根目录下的修改)，修改完了之后把sass和source文件夹里的东西备份下来(不包含_post或者其他自己添加的文件夹)，就可以作为模板备份，即使以后需要重装，安装备份的模板就可以。</li>
</ul>


<h3>基本设置</h3>

<ul>
<li>基本的一些博客标题还有个人信息的设置在_config.yml里，<strong>需要注意的是每个设置的<code>:</code>号后面需要有个空格</strong>，否则会出问题。</li>
<li>设置的具体含义不做解释了，但是像里面的一些对第三方东西例如facebook，tweet等等国内访问有问题一般笔者都是直接设置为false的，否则会引起页面加载特别不流畅。</li>
<li>若要自定义一些页面内容细节，在source文件夹里找到对应页面，&#8220;就标识_config.yml里XXXXX设置的内容，可以自定义一些设置。</li>
</ul>


<h3>发布文章</h3>

<ul>
<li><code>rake new_post['文章标题']</code>此命令即可在source的_post文件夹下面添加一个markdown文件。</li>
<li>打开markdown文件添加内容保存即可在浏览器预览页面看到新文章信息，注意头部文章标题和时间等等信息，这是网站所需要的，不能删除。</li>
<li>markdown编辑器:<a href="http://www.mouapp.com/">Mou(非网页)</a>，<a href="http://maxiang.info/">马克飞象</a>，<a href="http://mahua.jser.me/">MaHua</a></li>
</ul>


<h3>添加页面</h3>

<ul>
<li><code>rake new_page['img']</code>此命令在source文件夹下添加一个名为img的文件夹。</li>
<li>一般笔者是添加一个名为img的文件夹，然后把所有的图片资源都放到里面。而markdown编辑下添加图片的地方用/img/XXX.jpg即可。</li>
</ul>


<h3>发布到Github</h3>

<ul>
<li>在Github下建议个名为XXX.github.com的Repository。</li>
<li>运行<code>rake setup_github_pages</code>，它会提示你输入你的github的库地址，例如：<code>git@github.com:yourname/XXX.github.com.git</code></li>
<li>运行<code>rake generate</code>生成静态页面，<code>rake deploy</code>部署到github上。</li>
</ul>


<p>其实部署到网络的只有public文件夹的所有内容(也就是<code>rake generate</code>命令生成的内容)，如果你有其他的空间，例如BAE，你也可以将public文件夹里的内容放到其上，同样可以访问，只要能运行html文件的地方，BAE的话需要设置app.conf里的主页为index.html。PS:<code>rake deploy</code>命令不可用于除了Github和Heroku外的其他空间。</p>

<h3>Github自定义域名</h3>

<ul>
<li>在source根目录下建议一个文件CNAME(无后缀),里面只写一行即为你的域名无前缀，例如molon.me</li>
<li>笔者是使用的<a href="http://DNSPod.cn">DNSPod</a>作为域名解析服务器，对域名这块不甚了解，一张图解释设置。 <br/>
<img src="http://molon.github.io/img/github_dnspod_setting.png" alt="github_dnspod_setting" /></li>
</ul>

]]></content>
  </entry>
  
</feed>
